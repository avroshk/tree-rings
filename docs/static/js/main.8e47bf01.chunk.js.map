{"version":3,"sources":["SVGRenderer.js","App.js","reportWebVitals.js","index.js"],"names":["SVGRenderer","useState","open","toggle","h","setH","v","setV","useSpring","reverse","from","verticalM","horizontalM","freq","to","config","duration","onRest","opacity","svg","xmlns","width","height","viewBox","circle","cx","cy","r","fill","stroke","strokeWidth","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAmCeA,EA5BK,WAAO,IAAD,EACDC,oBAAS,GADR,mBACjBC,EADiB,KACXC,EADW,OAENF,mBAAS,GAFH,mBAEjBG,EAFiB,KAEdC,EAFc,OAGNJ,mBAAS,GAHH,mBAGjBK,EAHiB,KAGdC,EAHc,OAK0BC,YAAU,CAC1DC,QAASP,EACTQ,KAAM,CAAEC,UAAW,IARZ,EAQmBL,EAAGM,YAAa,IATnC,EAS0CR,EAAGS,KAAM,QAC1DC,GAAI,CAAEH,UAAW,IATV,EASiBL,EAAGM,YAAa,IAVjC,EAUwCR,EAAGS,KAAM,QACxDE,OAAQ,CAAEC,SAAS,KACnBC,OAAQ,WACNd,GAAQD,GACRG,EAAKD,EAAI,EAAI,EAAI,GACjBG,EAAKD,EAAI,EAAI,EAAI,MARbO,EALgB,EAKhBA,KALgB,EAKVF,UALU,EAKCC,YALD,EAKcM,QAYtC,OACE,8BACE,eAAC,IAASC,IAAV,CAAcC,MAtBN,6BAsBoBC,MAAM,MAAMC,OAAO,MAAMC,QAAQ,cAA7D,UACE,cAAC,IAASC,OAAV,CAAiBC,GAAI,IAAKC,GAAI,IAAKC,EAAG,GAAIC,KAAK,UAAUC,OAAO,UAAUC,YAAa,IACvF,cAAC,IAASN,OAAV,CAAiBC,GAAI,IAAKC,GAAI,IAAKC,EAAGd,EAAMe,KAAK,OAAOC,OAAO,UAAUC,YAAa,UCf/EC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e47bf01.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\n// variable for the namespace\nconst svgns = \"http://www.w3.org/2000/svg\";\nconst dx = 3;\nconst dy = 3;\nconst SVGRenderer = () => {\n  const [open, toggle] = useState(false);\n  const [h, setH] = useState(1);\n  const [v, setV] = useState(1);\n\n  const { freq, verticalM, horizontalM, opacity } = useSpring({\n    reverse: open,\n    from: { verticalM: 200+dy*v, horizontalM: 200+dx*h, freq: '28.0'},\n    to: { verticalM: 200-dy*v, horizontalM: 200-dx*h, freq: '15.0'},\n    config: { duration:3000 },\n    onRest: () => {\n      toggle(!open);\n      setH(h > 0 ? 0 : 1);\n      setV(v > 0 ? 0 : 1);\n    }\n  });\n\n  return (\n    <div>\n      <animated.svg xmlns={svgns} width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">\n        <animated.circle cx={200} cy={200} r={10} fill=\"#DA251D\" stroke=\"#DA251D\" strokeWidth={2} />\n        <animated.circle cx={200} cy={200} r={freq} fill=\"none\" stroke=\"#DA251D\" strokeWidth={2} />\n      </animated.svg>\n    </div>\n\n  );\n}\n\nexport default SVGRenderer;\n","import './App.css';\nimport SVGRenderer from './SVGRenderer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SVGRenderer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n// <img src={svgImg} className=\"svg-img\" alt=\"svgImg\" />\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}