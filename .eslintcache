[{"/Users/avrosh/_code/tree-rings/src/reportWebVitals.js":"1","/Users/avrosh/_code/tree-rings/src/App.js":"2","/Users/avrosh/_code/tree-rings/src/index.js":"3","/Users/avrosh/_code/tree-rings/src/SVGRenderer.js":"4"},{"size":362,"mtime":1607295771435,"results":"5","hashOfConfig":"6"},{"size":291,"mtime":1607320820239,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1607295771434,"results":"8","hashOfConfig":"6"},{"size":2777,"mtime":1607922793967,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uvhwds",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/avrosh/_code/tree-rings/src/reportWebVitals.js",[],"/Users/avrosh/_code/tree-rings/src/App.js",[],"/Users/avrosh/_code/tree-rings/src/index.js",[],["20","21"],"/Users/avrosh/_code/tree-rings/src/SVGRenderer.js",["22","23","24","25"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Spring, config } from 'react-spring/renderprops';\n\n// variable for the namespace\nconst svgns = \"http://www.w3.org/2000/svg\";\n\nconst SVGRenderer = () => {\n  const [direction, toggleDirection] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [filterId, setFilterId] = useState(1);\n  const pathRef = useRef();\n\n\n\n  return (\n    <div onClick={() => { setFilterId(filterId > 0 ? 0 : filterId+1);} }>\n      <Spring\n        config={config.slow}\n        reset={reset}\n        reverse={direction}\n        from={{ dr: 20, cx: 200, cy: 200, r: 100, scale: 0, baseFreq: 0.01, numOctaves: 1  }}\n        to={{ dr: 5, cx: 175, cy: 175, r: 150, scale: 50, baseFreq: 0.1, numOctaves: 5 }}\n        config={{ duration: 2000 }}\n        onRest={() => { toggleDirection(!direction); setReset(true); }}>\n        {(props) => (\n            <svg xmlns={svgns} width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">\n              <defs>\n                <filter id=\"squiggly-0\">\n                  <feTurbulence id=\"turbulence\"\n                    baseFrequency={props.baseFreq}\n                    numOctaves={props.numOctaves}\n                    result=\"noise\"\n                    seed={0} />\n                  <feDisplacementMap id=\"displacement\" in=\"SourceGraphic\" in2=\"noise\" scale={props.scale} />\n                </filter>\n                <filter id=\"squiggly-1\">\n                  <feTurbulence id=\"turbulence\" baseFrequency=\"0.02\" numOctaves=\"3\" result=\"noise\" />\n                  <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"8\" />\n                </filter>\n              </defs>\n              <circle\n                style={{\"filter\": `url(#squiggly-${filterId})`}}\n                stroke={\"#DA251D\"}\n                strokeWidth={2}\n                cx={props.cx}\n                cy={props.cy}\n                r={props.r}\n                ref={pathRef}\n                fill=\"none\"\n              />\n              <circle\n                style={{\"filter\": `url(#squiggly-${filterId})`}}\n                stroke={\"#DA251D\"}\n                strokeWidth={2}\n                cx={props.cx}\n                cy={props.cy}\n                r={props.r+props.dr}\n                ref={pathRef}\n                fill=\"none\"\n              />\n              <circle\n                style={{\"filter\": `url(#squiggly-${filterId})`}}\n                stroke={\"#DA251D\"}\n                strokeWidth={2}\n                cx={props.cx}\n                cy={props.cy}\n                r={props.r+2*props.dr}\n                ref={pathRef}\n                fill=\"none\"\n              />\n            </svg>\n          )}\n      </Spring>\n    </div>\n  );\n}\n\nexport default SVGRenderer;\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":27,"nodeType":"32","messageId":"33","endLine":1,"endColumn":36},{"ruleId":"30","severity":1,"message":"34","line":2,"column":10,"nodeType":"32","messageId":"33","endLine":2,"endColumn":19},{"ruleId":"30","severity":1,"message":"35","line":2,"column":21,"nodeType":"32","messageId":"33","endLine":2,"endColumn":29},{"ruleId":"36","severity":1,"message":"37","line":24,"column":9,"nodeType":"38","endLine":24,"endColumn":36},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSpring' is defined but never used.","'animated' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]